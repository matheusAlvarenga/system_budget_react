{"version":3,"sources":["components/DisplayBalance.js","components/DisplayBalances.js","components/EntryLine.js","components/MainHeader.js","components/EntryForm.js","components/ModalEdit.js","components/ButtonNew.js","components/NewEntryForm.js","App.js","index.js"],"names":["DisplayBalance","color","size","textAlign","title","value","Statistic","Label","style","Value","DisplayBalances","expenses","incomes","Segment","Grid","columns","divided","Row","Column","EntryLine","id","description","onDelete","editEntry","width","Icon","name","onClick","bordered","MainHeader","type","Header","as","EntryForm","setDescription","setValue","setType","Form","Group","Input","placeholder","icon","label","iconPosition","onChange","e","target","compact","Checkbox","toggle","checked","ModalEdit","isOpen","handleClose","onFormSubmit","Modal","onClose","open","Content","Actions","Button","primary","ButtonNew","onNewClick","marginTop","negative","Or","NewEntryForm","unstackable","App","useState","initialEntries","entries","setEntries","openModal","setOpenModal","openModalId","setOpenModalId","setExpenses","setIncomes","reset","deleteEntry","result","filter","entry","index","findIndex","newType","useEffect","newEntries","totalIncome","totalExpenses","map","entrie","Number","Container","mapEntries","formatedType","concat","length","addEntry","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2036dd41.chunk.js","sourcesContent":["import React from \"react\";\nimport { Statistic } from \"semantic-ui-react\";\n\nfunction DisplayBalance({ color, size, textAlign, title, value }) {\n    return (\n        <Statistic color={color} size={size}>\n            <Statistic.Label style={{ textAlign: { textAlign } }}>\n                {title}\n            </Statistic.Label>\n            <Statistic.Value>${value}</Statistic.Value>\n        </Statistic>\n    );\n}\n\nexport default DisplayBalance;\n","import React from \"react\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport DisplayBalance from \"./DisplayBalance\";\n\nfunction DisplayBalances({ expenses, incomes }) {\n    return (\n        <Segment textAlign=\"center\">\n            <Grid columns={2} divided>\n                <Grid.Row>\n                    <Grid.Column>\n                        <DisplayBalance\n                            size=\"tiny\"\n                            color=\"green\"\n                            textAlign=\"center\"\n                            title=\"Income:\"\n                            value={`${incomes}`}\n                        ></DisplayBalance>\n                    </Grid.Column>\n                    <Grid.Column>\n                        <DisplayBalance\n                            size=\"tiny\"\n                            color=\"red\"\n                            textAlign=\"center\"\n                            title=\"Expenses:\"\n                            value={`${expenses}`}\n                        ></DisplayBalance>\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Segment>\n    );\n}\n\nexport default DisplayBalances;\n","import React from \"react\";\nimport { Grid, Icon, Segment } from \"semantic-ui-react\";\n\nfunction EntryLine({ id, color, description, value, onDelete, editEntry }) {\n    return (\n        <>\n            <Segment color={color}>\n                <Grid columns={3} textAlign=\"right\">\n                    <Grid.Row>\n                        <Grid.Column width={10} textAlign=\"left\">\n                            {description}\n                        </Grid.Column>\n                        <Grid.Column width={3}>${value}</Grid.Column>\n                        <Grid.Column width={3}>\n                            <Icon\n                                name=\"edit\"\n                                onClick={() => editEntry(id)}\n                                bordered\n                            ></Icon>\n                            <Icon\n                                name=\"trash\"\n                                onClick={() => onDelete()}\n                                bordered\n                            ></Icon>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n        </>\n    );\n}\n\nexport default EntryLine;\n","import React from \"react\";\nimport { Header } from \"semantic-ui-react\";\n\nfunction MainHeader({ title, type = \"h1\" }) {\n    return <Header as={type}>{title}</Header>;\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport { Checkbox, Form, Header, Segment } from \"semantic-ui-react\";\n\nfunction EntryForm({\n    setDescription,\n    setValue,\n    setType,\n    description,\n    value,\n    type,\n}) {\n    return (\n        <>\n            <Form.Group>\n                <Form.Input\n                    placeholder=\"Payment for a Freela Job\"\n                    icon=\"tags\"\n                    width={12}\n                    label=\"Description\"\n                    iconPosition=\"left\"\n                    value={description}\n                    onChange={(e) => {\n                        setDescription(e.target.value);\n                    }}\n                ></Form.Input>\n                <Form.Input\n                    placeholder=\"$15,00\"\n                    icon=\"dollar\"\n                    width={4}\n                    label=\"Value\"\n                    iconPosition=\"left\"\n                    value={value}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                    }}\n                ></Form.Input>\n            </Form.Group>\n            <Segment compact>\n                <Header as=\"h4\">Is an Expense?</Header>\n                <Checkbox\n                    toggle\n                    checked={type}\n                    onChange={() => setType(!type)}\n                ></Checkbox>\n            </Segment>\n        </>\n    );\n}\n\nexport default EntryForm;\n","import React from \"react\";\nimport { Button, Modal } from \"semantic-ui-react\";\nimport EntryForm from \"./EntryForm\";\n\nfunction ModalEdit({\n    isOpen,\n    handleClose,\n    onFormSubmit,\n    description,\n    setDescription,\n    type,\n    setType,\n    value,\n    setValue,\n}) {\n    return (\n        <Modal onClose={() => handleClose()} open={isOpen}>\n            <Modal.Header>Edit entry</Modal.Header>\n            <Modal.Content>\n                <EntryForm\n                    description={description}\n                    setDescription={setDescription}\n                    value={value}\n                    setValue={setValue}\n                    type={type}\n                    setType={setType}\n                ></EntryForm>\n            </Modal.Content>\n            <Modal.Actions>\n                <Button onClick={() => handleClose()}>Close</Button>\n                <Button primary onClick={() => handleClose()}>\n                    Save\n                </Button>\n            </Modal.Actions>\n        </Modal>\n    );\n}\n\nexport default ModalEdit;\n","import React from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nfunction ButtonNew({ onNewClick }) {\n    return (\n        <Button.Group style={{ marginTop: \"16px\" }}>\n            <Button negative>Cancel</Button>\n            <Button.Or></Button.Or>\n            <Button onClick={() => onNewClick()} primary>\n                Save\n            </Button>\n        </Button.Group>\n    );\n}\n\nexport default ButtonNew;\n","import React from \"react\";\nimport { Form } from \"semantic-ui-react\";\nimport ButtonNew from \"./ButtonNew\";\nimport EntryForm from \"./EntryForm\";\n\nfunction NewEntryForm({\n    onFormSubmit,\n    description,\n    setDescription,\n    type,\n    setType,\n    value,\n    setValue,\n}) {\n    return (\n        <Form unstackable>\n            <EntryForm\n                description={description}\n                setDescription={setDescription}\n                value={value}\n                setValue={setValue}\n                type={type}\n                setType={setType}\n            ></EntryForm>\n            <ButtonNew\n                onNewClick={() => {\n                    onFormSubmit(description, value, type);\n                }}\n            ></ButtonNew>\n        </Form>\n    );\n}\n\nexport default NewEntryForm;\n","import React, { useState, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\n\nimport \"./App.css\";\n\nimport DisplayBalance from \"./components/DisplayBalance\";\nimport DisplayBalances from \"./components/DisplayBalances\";\nimport EntryLine from \"./components/EntryLine\";\nimport MainHeader from \"./components/MainHeader\";\nimport ModalEdit from \"./components/ModalEdit\";\nimport EntryForm from \"./components/NewEntryForm\";\n\nfunction App() {\n    const [entries, setEntries] = useState(initialEntries);\n    const [description, setDescription] = useState(\"\");\n    const [value, setValue] = useState(\"\");\n    const [type, setType] = useState(false);\n    const [openModal, setOpenModal] = useState(false);\n    const [openModalId, setOpenModalId] = useState(0);\n    const [expenses, setExpenses] = useState(0);\n    const [incomes, setIncomes] = useState(0);\n\n    useEffect(() => {\n        if (!openModal && openModalId) {\n            const index = entries.findIndex(\n                (entry) => entry.id === openModalId\n            );\n\n            const newEntries = [...entries];\n\n            newEntries[index].description = description;\n            newEntries[index].value = value;\n            newEntries[index].type = type ? \"-\" : \"+\";\n\n            setEntries(newEntries);\n            reset();\n        }\n\n        if (!openModal) {\n            reset();\n        }\n        // eslint-disable-next-line\n    }, [openModal]);\n\n    useEffect(() => {\n        let totalIncome = 0;\n        let totalExpenses = 0;\n        entries.map((entrie) => {\n            if (entrie.type === \"+\") {\n                return (totalIncome += Number(entrie.value));\n            } else {\n                return (totalExpenses += Number(entrie.value));\n            }\n        });\n        setExpenses(totalExpenses);\n        setIncomes(totalIncome);\n        // eslint-disable-next-line\n    }, [entries]);\n\n    function reset() {\n        setDescription(\"\");\n        setValue(\"\");\n        setType(false);\n    }\n\n    function mapEntries(entries) {\n        return entries.map((entrie) => (\n            <EntryLine\n                key={entrie.id}\n                id={entrie.id}\n                color={entrie.type === \"-\" ? \"red\" : \"green\"}\n                description={entrie.description}\n                value={entrie.value}\n                onDelete={() => deleteEntry(entrie.id)}\n                openModal={openModal}\n                editEntry={editEntry}\n            ></EntryLine>\n        ));\n    }\n\n    function deleteEntry(id) {\n        const result = entries.filter((entry) => entry.id !== id);\n        setEntries(result);\n    }\n\n    function editEntry(id) {\n        if (id) {\n            const index = entries.findIndex((entry) => entry.id === id);\n            const entry = entries[index];\n\n            const newType = entry.type === \"+\" ? false : true;\n\n            setDescription(entry.description);\n            setValue(entry.value);\n            setType(newType);\n            setOpenModalId(entry.id);\n            setOpenModal(true);\n        }\n    }\n\n    function addEntry(description, value, type) {\n        const formatedType = type ? \"-\" : \"+\";\n\n        const result = entries.concat({\n            id: entries.length + 1,\n            description,\n            value,\n            type: formatedType,\n        });\n        setEntries(result);\n        reset();\n    }\n\n    return (\n        <Container>\n            <MainHeader title=\"Budget\"></MainHeader>\n\n            <DisplayBalance\n                size=\"small\"\n                title=\"Your Balance:\"\n                value={incomes - expenses}\n            ></DisplayBalance>\n\n            <DisplayBalances\n                expenses={expenses}\n                incomes={incomes}\n            ></DisplayBalances>\n\n            <MainHeader title=\"History\" type=\"h3\"></MainHeader>\n\n            {mapEntries(entries)}\n\n            <MainHeader title=\"Add New Transaction\" type=\"h3\"></MainHeader>\n            <EntryForm\n                onFormSubmit={(description, value, type) =>\n                    addEntry(description, value, type)\n                }\n                description={description}\n                setDescription={setDescription}\n                value={value}\n                setValue={setValue}\n                type={type}\n                setType={setType}\n            ></EntryForm>\n            <ModalEdit\n                handleClose={() => setOpenModal(!openModal)}\n                isOpen={openModal}\n                description={description}\n                setDescription={setDescription}\n                value={value}\n                setValue={setValue}\n                type={type}\n                setType={setType}\n            ></ModalEdit>\n        </Container>\n    );\n}\n\nexport default App;\n\nconst initialEntries = [];\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}